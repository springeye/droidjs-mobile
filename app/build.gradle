plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "com.google.protobuf"
    id 'kotlin-android'
}

android {
    namespace 'com.github.springeye.droidjs'
    compileSdk 33

    defaultConfig {
        applicationId "com.github.springeye.droidjs"
        minSdk 26
        //noinspection ExpiredTargetSdkVersion
        targetSdk 26
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.github.springeye.droidjs.DroidTestRunner"
        ndk {
//            abiFilters 'arm64-v8a', 'x86_64'
            abiFilters 'arm64-v8a'
        }
        vectorDrawables {
            useSupportLibrary true
        }

    }
    splits {

        density {
            enable true
            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()
            include "x86","x86_64","armeabi-v7a","arm64-v8a"
//            include "armeabi-v7a","arm64-v8a"
        }
    }
    buildTypes {
        release {
            debuggable = false
            jniDebuggable = false
            minifyEnabled = true
            zipAlignEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha11'


    // For Robolectric tests.
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    // ...with Kotlin.
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'
    // ...with Java.
    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.44'

    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // ...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
    // ...with Java.
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.44'

    def lifecycle_version = "2.5.1"
    def arch_version = "2.1.0"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"


    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // optional - Test helpers for Lifecycle runtime
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"




    implementation 'com.eclipsesource.j2v8:j2v8:6.2.1@aar'

    implementation("io.ktor:ktor-client-core:$ktor_version")
    implementation("io.ktor:ktor-client-cio:$ktor_version")
    implementation "io.ktor:ktor-serialization-gson:$ktor_version"
    implementation("io.ktor:ktor-client-websockets:$ktor_version")
    implementation("com.google.protobuf:protoc:3.21.7")
    implementation("com.google.protobuf:protobuf-java:3.21.7")
//    implementation 'com.github.kigkrazy:luaj-android:3.0.3'

    implementation 'com.github.springeye:luaj-android:4c90be89ed'




        implementation 'androidx.compose.ui:ui:1.2.1'
        // Tooling support (Previews, etc.)
        implementation 'androidx.compose.ui:ui-tooling:1.2.1'
        // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
        implementation 'androidx.compose.foundation:foundation:1.2.1'
        // Material Design
        implementation 'androidx.compose.material:material:1.2.1'
        // Material design icons
        implementation 'androidx.compose.material:material-icons-core:1.2.1'
        implementation 'androidx.compose.material:material-icons-extended:1.2.1'
        // Integration with activities
        implementation 'androidx.activity:activity-compose:1.5.1'
        // Integration with ViewModels
        implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

        // UI Tests
        androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.2.1'

    // When using a MDC theme
    implementation "com.google.android.material:compose-theme-adapter:1.1.20"

    // When using a AppCompat theme
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.25.1"


    implementation "com.quickbirdstudios:opencv:4.5.3.0"
//    implementation "com.quickbirdstudios:opencv-contrib:4.5.3.0"
//    implementation 'com.google.mlkit:object-detection:17.0.0'



}
kapt {
    correctErrorTypes true
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.7"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
//                python { }
//                kotlin { }
                java{}
                go{}
            }
        }
    }
}